<!DOCTYPE html>
<html lang='en'>
<head>
  <% include ./partials/head %>
</head>
<body class='container-fluid'>
  <header>
    <ol class='breadcrumb'>
      <a class='breadcrumb-item' href='/'>Tables</a>
      <a class='breadcrumb-item' href='/tables/<%= TableName %>'><%= TableName %></a>
      <% if (Item.id) { %>
        <span class='breadcrumb-item'>
          <%= Item.id %>
        </span>
      <% } %>
    </ol>
  </header>

  <main>
    <nav>
      <script>
      function handleEditClick () {
        const textarea = document.getElementById('documentTextarea')
        const saveButton = document.getElementById('saveButton')

        fetch(document.location.pathname, {
          method: 'put',
          headers: {
            'Content-Type': 'application/json'
          },
          body: document.getElementById('documentTextarea').value
        }).then((response) => {
          if (response.ok) {
            return response.json()
          } else {
            throw new Error()
          }
        }).then((json) => {
          if (document.location.pathname.endsWith('/add-item')) {
            const urlPart1 = document.location.pathname.replace('/add-item', '')
            const param = encodeURIComponent(Object.values(json).join(','))

            window.location = `${urlPart1}/items/${param}`
            return
          }
          textarea.value = JSON.stringify(json, null, 2)
          textarea.focus()
          saveButton.classList.remove('btn-primary')
          saveButton.classList.add('btn-success')
          setTimeout(() => {
            saveButton.classList.add('btn-primary')
            saveButton.classList.remove('btn-success')
          }, 2000)
        }).catch((error) => {
          textarea.focus()
          saveButton.classList.remove('btn-primary')
          saveButton.classList.add('btn-warning')
          setTimeout(() => {
            saveButton.classList.add('btn-primary')
            saveButton.classList.remove('btn-warning')
          }, 2000)
          console.error(error)
        })
      }

      // polyfill
      if (!Object.values) {
        const reduce = Function.bind.call(Function.call, Array.prototype.reduce)
        const isEnumerable = Function.bind.call(Function.call, Object.prototype.propertyIsEnumerable)
        const concat = Function.bind.call(Function.call, Array.prototype.concat)
        const keys = Reflect.ownKeys
        Object.values = function values(O) {
        	return reduce(keys(O), (v, k) => concat(v, typeof k === 'string' && isEnumerable(O, k) ? [O[k]] : []), [])
        }
      }
      </script>
      <button
        class='btn btn-primary'
        id='saveButton'
        onclick='handleEditClick()'
        type='button'
      >
        Save
      </button>

      <script>
      function handleDeleteClick (event) {
        event.preventDefault()
        fetch(document.location.pathname, {
          method: 'delete'
        }).then((response) => {
          if (response.ok) {
            window.location = `/tables/<%= TableName %>`
          }
        }).catch((error) => {
          console.error(error)
          alert('There was an error.')
        })
      }
      </script>
      <% if (!isNew) { %>
        <button
          class='btn btn-danger'
          onclick='handleDeleteClick(event)'
          type='button'
        >
          Delete
        </button>
      <% } %>
    </nav>
    <article
      style='margin-top: 16px;'
    >
      <textarea
        autocapitalize='off'
        autocorrect='off'
        autofocus
        spellcheck='false'
        id='documentTextarea'
        onKeyUp='setTextareaHeight()'
        style='width: 100%; border: 0 none; outline: none;'
      ><%= JSON.stringify(Item, null, 2) %></textarea>
      <script>
      function setTextareaHeight (fieldId){
        const textarea = document.getElementById('documentTextarea')
        textarea.style.height = `${textarea.scrollHeight + 100}px`
      }
      setTextareaHeight()
      </script>
    </article>
  </main>
</body>
</html>
